<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.student.mapper.GradeMapper">

    <resultMap type="Grade" id="GradeResult">
        <id property="gradeId" column="grade_id"/>
        <result property="userId" column="user_id"/>
        <result property="courseId" column="course_id"/>
        <result property="grade" column="grade"/>
        <result property="remarks" column="remarks"/>
    </resultMap>

    <!-- 获取所有成绩 -->
    <select id="getAllGrades" resultMap="GradeResult">
        SELECT * FROM sms_grade
    </select>

    <!-- 根据成绩ID获取成绩信息 -->
    <select id="getGradeById" parameterType="Long" resultMap="GradeResult">
        SELECT * FROM sms_grade WHERE grade_id = #{gradeId}
    </select>

    <!-- 根据学生ID获取成绩信息 -->
    <select id="getGradeByUserId" parameterType="Long" resultMap="GradeResult">
        SELECT * FROM sms_grade WHERE user_id = #{userId}
    </select>

    <!-- 获取每门课程的挂科率 -->
    <select id="getFailureRateByCourse" resultType="map">
        SELECT
        course_id AS courseId,
        COUNT(*) AS totalStudents,
        SUM(CASE WHEN grade &lt; 60 THEN 1 ELSE 0 END) AS failCount,
        SUM(CASE WHEN grade &lt; 60 THEN 1 ELSE 0 END) / NULLIF(COUNT(*), 0) AS failureRate
        FROM
        sms_grade
        GROUP BY
        course_id
    </select>

    <!-- 获取每门课程的平均分，返回课程ID和平均分的Map -->
    <select id="getAverageScoreByCourse" resultType="map">
        SELECT
            course_id AS courseId,
            AVG(grade) AS averageScore
        FROM
            sms_grade
        GROUP BY
            course_id
    </select>


    <!-- 添加成绩 -->
    <insert id="addGrade" parameterType="Grade">
        INSERT INTO sms_grade (user_id, course_id, grade, remarks)
        VALUES (#{userId}, #{courseId}, #{grade}, #{remarks})
    </insert>

    <!-- 更新成绩信息 -->
    <update id="updateGrade" parameterType="Grade">
        UPDATE sms_grade
        SET user_id = #{userId}, course_id = #{courseId},
            grade = #{grade},remarks = #{remarks}
        WHERE grade_id = #{gradeId}
    </update>

    <!-- 删除成绩 -->
    <delete id="deleteGrade" parameterType="Long">
        DELETE FROM sms_grade WHERE grade_id = #{gradeId}
    </delete>

</mapper>
